const WizardScene = require('telegraf/scenes/wizard')
const Markup = require('telegraf/markup')

const fs = require('fs')

const User = require('../../../database/models/User')

const MainMenuScene = new WizardScene(
  'MainMenuScene',
  async (ctx) => {
    let tgId
    try { tgId = ctx.update.message.chat.id } catch (e) {
      console.log(e + ' —á–µ–∫–∞–π beginMM, –±–∏—Ç—ã–π –º–µ—Å—ç–¥–∂')
    }
    try { tgId = ctx.update.callback_query.from.id } catch (e) {
      console.log(e + ' —á–µ–∫–∞–π beginMM, –±–∏—Ç—ã–π –∫–æ–ª–±—ç–∫')
    }
      ctx.replyWithMarkdown('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', Markup.keyboard(
          [
              ['üñäÔ∏èAdd message', '‚ùì–ü—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–∏—Å–∞'],
              ['üí≤–ë–∞–ª–∞–Ω—Å', '‚öôÔ∏è–ü–æ–¥–¥–µ—Ä–∂–∫–∞']
          ]
      ).extra())

    return ctx.wizard.next()
  },
  (ctx) => {
    try {
      if (ctx.update.message.text === 'Add message') {
        return ctx.scene.enter('RulesScene')
      } else
      if (ctx.update.message.text === 'üñäÔ∏è–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É') {
        return ctx.scene.enter('EditClientProfileScene')
      } else
      if (ctx.update.message.text === '‚öôÔ∏è–ü–æ–¥–¥–µ—Ä–∂–∫–∞') {
        return ctx.scene.enter('ProtectScene')
      } else
      if (ctx.update.message.text === 'üñä–ë–∞–ª–∞–Ω—Å') {
        return ctx.scene.enter('addBalanceScene')
      }
    } catch (e) {
      console.log('not include message in cMM')
    }

    ctx.wizard.back()
    return ctx.scene.leave()
  }
)

module.exports = MainMenuScene
